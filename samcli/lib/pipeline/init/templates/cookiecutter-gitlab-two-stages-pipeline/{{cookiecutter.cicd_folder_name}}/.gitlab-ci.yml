variables:
  cfn_template: {{cookiecutter.cfn_template}}

  staging_deployer_role: {{cookiecutter.staging_deployer_role}}
  staging_cfn_role: {{cookiecutter.staging_cfn_role}}
  staging_region: {{cookiecutter.staging_region}}
  staging_artifacts_bucket: {{cookiecutter.staging_artifacts_bucket}}

  prod_deployer_role: {{cookiecutter.prod_deployer_role}}
  prod_cfn_role: {{cookiecutter.prod_cfn_role}}
  prod_region: {{cookiecutter.prod_region}}
  prod_artifacts_bucket: {{cookiecutter.prod_artifacts_bucket}}

stages:
  - test
  - build
  - staging
  - prod

# uncomment and modify the following step for running the unit-tests
#
#unit-test:
#  stage: test
#  only:
#    - mainline
#    - /^feature-.*$/
#  script: |
#    Assuming python runtime
#    pip install pytest
#    pip install -r /path/to/requirements.txt
#    python -m pytest /path/to/unit-tests

build-and-deploy-feature:
  stage: build
  only:
    - /^feature-.*$/
  before_script:
    - yum install -y jq
    - python3 -m venv venv && venv/bin/pip install aws-sam-cli
  script: |
    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${staging_region} \
                          ${staging_deployer_role} \
                          feature-deployment
    sam build --template ${cfn_template} --use-container
    sam deploy --stack-name features-${CI_COMMIT_REF_NAME}-cfn-stack \
               --capabilities CAPABILITY_IAM \
               --region ${staging_region} \
               --s3-bucket ${staging_artifacts_bucket} \
               --no-fail-on-empty-changeset \
               --role-arn ${staging_cfn_role}
build:
  stage: build
  only:
    - mainline
  before_script:
    - apt-get install -y python3.8-venv
    - python3 -m venv venv && venv/bin/pip install aws-sam-cli
  script: |
    sam build --template ${cfn_template} --use-container

    sam package \
          --s3-bucket ${staging_artifacts_bucket} \
          --region ${staging_region} \
          --output-template-file packaged-${staging_region}.yaml

    sam package \
           --s3-bucket ${prod_artifacts_bucket} \
           --region ${prod_region} \
           --output-template-file packaged-${prod_region}.yaml
  artifacts:
    paths:
      - packaged-${staging_region}.yaml
      - packaged-${prod_region}.yaml
    expire_in: 1 year

deploy-staging:
  stage: staging
  only:
    - mainline
  image: amazon/aws-sam-cli-build-image-provided
  before_script:
    - yum install -y jq
  script: |
    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${staging_region} \
                          ${staging_deployer_role} \
                          staging-deployment
    sam deploy --stack-name staging-cfn-stack \
               --template packaged-${staging_region}.yaml \
               --capabilities CAPABILITY_IAM \
               --region ${staging_region} \
               --s3-bucket ${staging_artifacts_bucket} \
               --no-fail-on-empty-changeset \
               --role-arn ${staging_cfn_role}

deploy-prod:
  stage: prod
  when: manual
  only:
    - mainline
  image: amazon/aws-sam-cli-build-image-provided
  before_script:
    - yum install -y jq
  script: |
    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${prod_region} \
                          ${prod_deployer_role} \
                          prod-deployment
    sam deploy --stack-name prod-cfn-stack \
               --template packaged-${prod_region}.yaml \
               --capabilities CAPABILITY_IAM \
               --region ${prod_region} \
               --s3-bucket ${prod_artifacts_bucket} \
               --no-fail-on-empty-changeset \
               --role-arn ${prod_cfn_role}
